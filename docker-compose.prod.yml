services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: easyholmes-backend-prod
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - API_TOKEN=${API_TOKEN}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - database
    networks:
      - easyholmes-network
    restart: unless-stopped

  database:
    image: postgres:15-alpine
    container_name: easyholmes-database
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - easyholmes-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: easyholmes-frontend-prod
    depends_on:
      - backend
    networks:
      - easyholmes-network
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  sqlite_data:
  postgres_data:

networks:
  easyholmes-network:
    driver: bridge 