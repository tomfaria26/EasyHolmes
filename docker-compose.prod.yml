services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: easyholmes-backend-prod
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_TOKEN=${API_TOKEN}
      - DB_HOST=easyholmes-database
      - DB_PORT=5432
      - DB_NAME=easyholmes
      - DB_USER=easyholmes
      - DB_PASSWORD=easyholmes123
    depends_on:
      - database
    networks:
      - easyholmes-network
    restart: unless-stopped

  database:
    image: postgres:15-alpine
    container_name: easyholmes-database
    environment:
      - POSTGRES_DB=easyholmes
      - POSTGRES_USER=easyholmes
      - POSTGRES_PASSWORD=easyholmes123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - easyholmes-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: easyholmes-frontend-prod
    depends_on:
      - backend
    networks:
      - easyholmes-network
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  sqlite_data:
  postgres_data:

networks:
  easyholmes-network:
    driver: bridge 